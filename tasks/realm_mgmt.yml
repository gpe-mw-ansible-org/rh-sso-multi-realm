---

- set_fact:
    retrieve_token_url: "{{rhsso_url}}/auth/realms/master/protocol/openid-connect/token"
- set_fact:
    create_realm_url: "{{rhsso_url}}/auth/admin/realms"
- set_fact:
    delete_realm_sub_url: "{{rhsso_url}}/auth/admin/realms"
- set_fact:
    create_user_url: "{{rhsso_url}}/auth/admin/realms"
- set_fact:
    ocp_master_url: "https://master.{{subdomain_base}}:443"





# 1)  Get access and refresh OAuth tokens
- name: SSO Realm management starting
  include: refreshOAuthTokens.yml


# 2)  Create or delete configurable number of realms
- name: "{{ realm_base_name }}       Loop through realm prep {{ first_generic_realm }} {{ last_generic_realm }}"
  include: realmPrep.yml realmId="{{ realm_base_name }}{{ item }}"
  loop: "{{ range(first_generic_realm|int, last_generic_realm|int + 1, 1)|list }}"
  when: last_generic_realm|int > 0


# 3) Load realm to facilitate business automation tooling (Process Automation Manager / Decision Manager)
- block:
    - name: "Load realm to facilitate business automation tooling (Process Automation Manager / Decision Manager)"
      set_fact:
        realmId: 'kieRealm'
    - template:
        src: templates/kie-realm.json
        dest: "{{new_app_output_dir}}/kie-realm.json"
        mode: 0755
    - set_fact:
         realm_body: "{{ lookup('file', '{{new_app_output_dir}}/kie-realm.json' ) }}"
    - debug:
        msg: "realm_body = {{realm_body}}"
        verbosity: 1
    - include: realmCreate.yml realmId="{{realmId}}"
    - debug:
        msg: "kie-realm.json      create_realm_response = {{create_realm_response}}"
  when: loadKieRealm|bool


- pause:
    seconds: "{{realm_create_delay}}"


# 4) Configure OCP to use RH-SSO for Authentication
- block:
    - name: "Configure OCP to use RH-SSO for Authentication"
      set_fact:
        realmId: 'ocp-realm'
    - debug:
        msg: "{{ realmId }}  ocp_master_url = {{ ocp_master_url }}"
        verbosity: 0
    - template:
        src: templates/ocp-realm.json
        dest: "{{new_app_output_dir}}/ocp-realm.json"
        mode: 0755
    - set_fact:
         realm_body: "{{ lookup('file', '{{new_app_output_dir}}/ocp-realm.json' ) }}"
    - debug:
        msg: "{{ realmId }}  realm_body = {{realm_body}}"
        verbosity: 1
    - include: realmCreate.yml realmId="{{realmId}}"
    - debug:
        msg: "ocp-realm.json      create_realm_response = {{create_realm_response}}"
    - template:
        src: templates/ocp-realm-suggestion.txt
        dest: "{{new_app_output_dir}}/ocp-realm-suggestion.txt"
        mode: 0755
    - name: "{{ realmId }}   Loop through user creation {{start_ocp_user}} {{end_ocp_user}}"
      include: userPrep.yml
      loop: "{{ range(start_ocp_user|int, end_ocp_user|int + 1, 1)|list }}"

  when: loadOCPRealm|bool



# 3)  Print log messages
- name: Realm Rollout Complete
  debug:
    msg:
      - "create_realms: {{create_realms}}"
      - "new_app_output_dir:  {{new_app_output_dir}}"
      - "realm_management_log_file = {{new_app_output_dir}}/{{realm_provisioning_log_file}}"
      - "start and end realms = {{first_generic_realm}}  {{last_generic_realm}}"
      - "ocp realm details :   {{new_app_output_dir}}/ocp-realm-suggestion.txt"
